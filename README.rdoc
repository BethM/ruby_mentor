
These exercises are coding exercises that I have my mentoring students
run through when I see them struggling with a particular concept, or
if I think they need more practice on a given topic.

I've found it's helpful to have them approach learning a given concept
from several different angles.

Some of these exercises are Ruby, some are Ruby on Rails. If you are
doing a given exercise, don't use Rails unless you really need to.

### Setup section ###

1. Fork this repo.

  In the top left corner of this page there is a "Fork" button. Click it.
  You will be asked where you would like to fork the directory to.
  Choose an option.

  This makes a copy of the repository so that you can make changes to it.

2. Clone the repo locally.

  In the terminal run:
  git clone https://github.com/USERNAME/NAME_OF_REPO.git

  This clones your fork of the repo into the current directory in terminal.

3. Add Upstream repo.

  Now you need to add a remote, "upstream" in your local repo that points at
  the original so you can pull from it. To do this run:

  git remote add upstream git@github.com:USERNAME/REPO.git

4. Checkout an "answers" branch.

  git checkout -b answers

  This creates a branch named "answers" which will serve as your base that
  you will make all your other branches from. This way you are not making
  changes directly to "master".

5. Create an "answers" subdirectory

  mkdir answers

  This creates a subdirectory named "answers".

6. Add this to git and commit

  git add answers

  Adds the answers directory to the list of files that git will track.

  git commit -m "Add answers directory"

  Commits the files that have been changed. The -m option allows you to
  add a message that describes what happened on the commit.

7. Push the commit to "origin"

  git push -u origin answers

  This pushes the commit from the "answers" branch to "origin" which is
  the original repository. The -u causes git to remember to push from
  "answers" to "origin" so that next time you need to push you will only
  need to run "git push".

### Working on an assignment ###

1. Checkout your "answers" branch

  git checkout answers

  Be sure you are on your "answers" branch so you can begin to make changes.

2. Create a topic branch based off answers

  git checkout -b name_of_new_branch

3. Create a subdirectory for the project

  mkdir answers/new_directory (substitute the assignment name for "new_directory")

  Now there is a directory just for this assignment.

4. Do homework ***committing as you go***

  It is important to commit work often. Each time you make a commit be sure
  to provide a descriptive message about what happend on that commit.

5. When finished open a pull request on your repo to merge the topic branch into
   the answers branch

  git push

  Go to your repo.
  On the right of the screen near the top click the branch button.
  Choose the branch that you have been working on.
  Click the "Pull Request" button at the top middle.
  Click on "Send Pull Request"

  A pull request lets you tell people about the changes you have made to a repo.
